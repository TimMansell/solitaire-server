findUserByLID

Query(
  Lambda(
    ["uid"],
    If(IsEmpty(Match(Index("unique_User_uid"), Var("uid"))), null, {
      uid: Select(["ref"], Get(Match(Index("unique_User_uid"), Var("uid"))))
    })
  )
)

----------------

newGame

Query(
  Lambda(
    ["uid"],
    Let(
      { ref: Ref(Collection("User"), Var("uid")), date: Now() },
      Create(Collection("Game"), {
        data: {
          date: Var("date"),
          won: false,
          lost: false,
          completed: false,
          gameNumber: Add(
            Count(Match(Index("game_user_by_user"), Var("ref"))),
            1
          ),
          user: Var("ref")
        }
      })
    )
  )
)

----------------

totalGames

Query(Lambda([], { count: Count(Documents(Collection("Game"))) }))

----------------

userStats

Query(
  Lambda(
    ["uid"],
    Let(
      {
        user: Match(
          Index("game_user_by_user"),
          Ref(Collection("User"), Var("uid"))
        )
      },
      {
        count: Count(Var("user")),
        won: Count(
          Intersection(Var("user"), Match(Index("game_user_by_won"), true))
        )
      }
    )
  )
)